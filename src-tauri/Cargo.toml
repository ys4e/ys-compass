cargo-features = ["profile-rustflags", "trim-paths"]

[package]
name = "ys-compass"
version = "0.1.0"
description = "A user interface for Yuan Shen"
authors = ["KingRainbow44"]
license = "MIT"
repository = "https://github.com/ys4e/ys-compass"
edition = "2021"
rust-version = "1.60"

[package.metadata.i18n]

# Configuration options for `rust-i18n`
available-locales = ["en", "zh-cn"]
default-locale = "en"
load-path = "../resources/lang"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]

tauri-build = { version = "2", features = [] }

[dependencies]

# Serialization
serde_json = "1.0"
serde_yml = "0.0.12"
serde = { version = "1.0", features = ["derive"] }

base64 = "0.22"
pcap-file = "2"

# Tauri & Plugins
tauri = { version = "2", features = ["protocol-asset"] }
tauri-plugin-log = "2"
tauri-plugin-store = "2"
tauri-plugin-dialog = "2"

# Tokio asynchronous runtime
tokio = { version = "1", features = ["full"] }

# Developer Tools
regex = "1.11"
log = "0.4"
pretty_env_logger = "0.5"
lazy_static = "1.5"
anyhow = "1"
dotenv_codegen = "0.15"
time = "0.3"
crossbeam-channel = "0.5"
rust-i18n = "3"

# System utilities
dirs = "6"
open = "5"
sysinfo = "0.33"
sys-locale = "0.3"

# Console application
clap = "4.5"
dialoguer = { version = "0.11", features = ["history"] }

# HTTP client
reqwest = "0.12"

# ys4e tools
protoshark = { path = "../../protoshark" }
ys-sniffer = { path = "../../ys-sniffer", features = ["tokio"] }

pcap = "2.2"

[target.'cfg(windows)'.dependencies]

# Windows-specific dependencies
windows = { version = "0.59", features = [
    "Win32_System_Console",
    "Win32_UI_WindowsAndMessaging",
    "Win32_UI_Shell",
    "Win32_System_Threading",
    "Win32_Security",
    "Win32_System_LibraryLoader",
    "Win32_System_Memory",
    "Win32_System_ProcessStatus",
    "Win32_System_Diagnostics_Debug"
] }
is_elevated = "0.1"

[target.'cfg(unix)'.dependencies]

# UNIX-specific dependencies
sudo = "0.6"

[features]

# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = [ "tauri/custom-protocol" ]

### The following are from Tauri's 'Cargo Configuration' page.
### See: https://v2.tauri.app/concept/size

[profile.dev]

opt-level = 1 # Prioritizes faster compile times.
incremental = true # Compile your binary in smaller steps.
rustflags = ["-Zthreads=8"] # Better compile performance.

[profile.release]

codegen-units = 1 # Allows LLVM to perform better optimization.
lto = true # Enables link-time-optimizations.
opt-level = "s" # Prioritizes small binary size. Use `3` if you prefer speed.
panic = "abort" # Higher performance by disabling panic handlers.
strip = true # Ensures debug symbols are removed.
trim-paths = "all" # Removes potentially privileged information from your binaries.
rustflags = ["-Cdebuginfo=0", "-Zthreads=8"] # Better compile performance.
